// Generated by view binder compiler. Do not edit!
package com.example.epl498luxzio.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.epl498luxzio.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentChangePWBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final EditText edtConfirmPassword;

  @NonNull
  public final EditText edtCurrentPassword;

  @NonNull
  public final EditText edtNewPassword;

  @NonNull
  public final TextView headerChangePassword;

  @NonNull
  public final View spaceChangePassword;

  private FragmentChangePWBinding(@NonNull RelativeLayout rootView,
      @NonNull EditText edtConfirmPassword, @NonNull EditText edtCurrentPassword,
      @NonNull EditText edtNewPassword, @NonNull TextView headerChangePassword,
      @NonNull View spaceChangePassword) {
    this.rootView = rootView;
    this.edtConfirmPassword = edtConfirmPassword;
    this.edtCurrentPassword = edtCurrentPassword;
    this.edtNewPassword = edtNewPassword;
    this.headerChangePassword = headerChangePassword;
    this.spaceChangePassword = spaceChangePassword;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentChangePWBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentChangePWBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_change_p_w, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentChangePWBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.edtConfirmPassword;
      EditText edtConfirmPassword = ViewBindings.findChildViewById(rootView, id);
      if (edtConfirmPassword == null) {
        break missingId;
      }

      id = R.id.edtCurrentPassword;
      EditText edtCurrentPassword = ViewBindings.findChildViewById(rootView, id);
      if (edtCurrentPassword == null) {
        break missingId;
      }

      id = R.id.edtNewPassword;
      EditText edtNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (edtNewPassword == null) {
        break missingId;
      }

      id = R.id.headerChangePassword;
      TextView headerChangePassword = ViewBindings.findChildViewById(rootView, id);
      if (headerChangePassword == null) {
        break missingId;
      }

      id = R.id.spaceChangePassword;
      View spaceChangePassword = ViewBindings.findChildViewById(rootView, id);
      if (spaceChangePassword == null) {
        break missingId;
      }

      return new FragmentChangePWBinding((RelativeLayout) rootView, edtConfirmPassword,
          edtCurrentPassword, edtNewPassword, headerChangePassword, spaceChangePassword);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
